"use strict";(self.webpackChunkedit_4_i_docs=self.webpackChunkedit_4_i_docs||[]).push([[552],{9312:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"editor/configuration/settings","title":"Settings","description":"Edit4i is highly customizable. You can configure it using the config.yaml file in ~/.edit4i/config.yaml or configure it on the GUI. The GUI is not implemented yet.","source":"@site/docs/editor/configuration/settings.md","sourceDirName":"editor/configuration","slug":"/editor/configuration/settings","permalink":"/docs/editor/configuration/settings","draft":false,"unlisted":false,"editUrl":"https://github.com/edit4i/docs/blob/main/docs/editor/configuration/settings.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","previous":{"title":"Fuzzy Finder","permalink":"/docs/editor/navigation/fuzzy-finder"},"next":{"title":"Git Integration","permalink":"/docs/editor/git/overview"}}');var o=n(4848),s=n(8453);const r={sidebar_position:1},d="Settings",c={},l=[];function a(e){const i={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"settings",children:"Settings"})}),"\n",(0,o.jsxs)(i.p,{children:["Edit4i is highly customizable. You can configure it using the ",(0,o.jsx)(i.code,{children:"config.yaml"})," file in ",(0,o.jsx)(i.code,{children:"~/.edit4i/config.yaml"})," or configure it on the GUI. The GUI is not implemented yet."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-yaml",children:'editor:\n  theme: "vs-dark"  # or "vs-light", "hc-black"\n  fontSize: 14\n  tabSize: 2\n  tabType: "spaces" # or \'tab\'\n  wordWrap: true\n  lineNumbers: true\n  minimap: true\n  vim:\n    enabled: true\n    defaultMode: "normal"  # "normal", "insert", "visual"\n'})}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.strong,{children:"Editor Settings:"})}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"theme"}),':  The editor theme (e.g., "vs-dark", "vs-light", "hc-black").']}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"fontSize"}),":  The font size in pixels."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"tabSize"}),":  The number of spaces per tab."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"wordWrap"}),":  Enable or disable word wrap."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"lineNumbers"}),": Show line number or nor"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"tabType"}),": Select 'space vs 'tab'"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"minimap"}),": Show minimap or not"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"vim.enabled"}),":  Enable or disable Vim mode."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"vim.defaultMode"}),": Sets the default mode after opening a file."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>d});var t=n(6540);const o={},s=t.createContext(o);function r(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);